var gulp = require('gulp');
var sass = require('gulp-sass');
var browserify = require('browserify');
var source = require('vinyl-source-stream');
var browserSync = require('browser-sync').create();
var jshint = require('gulp-jshint');
var uglify = require('gulp-uglify');
var concat = require('gulp-concat');
var environments = require('gulp-environments');
var clean = require('gulp-clean');

///////////////////////////////////////////////////////////////////////////////
// CONFIG
///////////////////////////////////////////////////////////////////////////////

var development = environments.development;
var production = environments.production;

// load config file based on enviroment
var configFile = production() ? "./src/env/prod.js" : "./src/env/dev.js";

///////////////////////////////////////////////////////////////////////////////
// Assets: Scripts
///////////////////////////////////////////////////////////////////////////////

gulp.task('scripts', function() {
    return gulp.src(['.src/assets/**/*.js', configFile])
        .pipe(uglify())
        .pipe(concat('vendor.min.js'))
        .pipe(gulp.dest('./public/'));
});

///////////////////////////////////////////////////////////////////////////////
// Assets: SCSS
///////////////////////////////////////////////////////////////////////////////

gulp.task('scss', function() {
    return gulp.src('./src/assets/scss/main.scss')
        .pipe(sass().on('error', sass.logError))
        .pipe(gulp.dest('./src/assets/css'));
});

///////////////////////////////////////////////////////////////////////////////
// Assets: Copy
///////////////////////////////////////////////////////////////////////////////

gulp.task('copy', ['browserify', 'scss'], function() {
    gulp.src(['./src/**/*.html', './src/**/*.css'])
        .pipe(gulp.dest('./public/'))
		.pipe(browserSync.stream())
});

///////////////////////////////////////////////////////////////////////////////
// JavaScript
///////////////////////////////////////////////////////////////////////////////

gulp.task('browserify', function() {
    return browserify('./src/app/app.js')
        .bundle()
        .pipe(source('bundle.js'))
        .pipe(gulp.dest('./public/'));
});

///////////////////////////////////////////////////////////////////////////////
// Lint
///////////////////////////////////////////////////////////////////////////////

gulp.task('lint', function() {
    return gulp.src('./src/app/**/*.js')
        .pipe(jshint())
        .pipe(jshint.reporter('default'));
});

///////////////////////////////////////////////////////////////////////////////
// Build
///////////////////////////////////////////////////////////////////////////////

gulp.task('build', ['lint', 'scss', 'copy', 'scripts']);

///////////////////////////////////////////////////////////////////////////////
// Clean
///////////////////////////////////////////////////////////////////////////////

gulp.task('clean', function() {
    return gulp.src('./public/', {read: false})
        .pipe(clean());
});

///////////////////////////////////////////////////////////////////////////////
// BrowserSync
///////////////////////////////////////////////////////////////////////////////

gulp.task('browser-sync', ['build'], function() {
    browserSync.init({
        server: {
            baseDir: "./public",
			/*routes: {
				'/node_modules': 'node_modules'
			}*/
        },
		browser:"safari"
    });
});

///////////////////////////////////////////////////////////////////////////////
// Default Task : Watch and Reload
///////////////////////////////////////////////////////////////////////////////

gulp.task('default', ['browser-sync'], function() {
    gulp.watch('./src/**/*.*', ['build']);
    gulp.watch('./public/**/*.*').on('change', browserSync.reload);
});